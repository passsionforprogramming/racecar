{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/v4.js","webpack:///./src/Bullet.js","webpack:///./src/Car.js","webpack:///./src/CrazyCar.js","webpack:///./src/Explosion.js","webpack:///./src/Game.js","webpack:///./src/InputHandler.js","webpack:///./src/Road.js","webpack:///./src/Stats.js","webpack:///./src/Zombie.js","webpack:///./src/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACjCA,UAAU,mBAAO,CAAC,yDAAW;AAC7B,kBAAkB,mBAAO,CAAC,iEAAmB;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAA6B;AACd;AACf;AACA,kBAAkB,8CAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAA8B;AACf;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,SAAS;AAChC,kCAAkC,+CAAM;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAA6B;AACd;AACf;AACA;AACA;AACA,kBAAkB,8CAAM;AACxB;AACA;AACA,mCAAmC,kCAAkC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC9BA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B;AACF;AACkB;AACR;AACN;AACE;AACA;AACM;AACrB;AACf;AACA;AACA;AACA,wBAAwB,6CAAI;AAC5B,uBAAuB,4CAAG;AAC1B,yBAAyB,8CAAK;AAC9B,YAAY,qDAAY;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+CAAM;AAChC;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,iDAAQ;AACzC;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,+CAAM;AACrC;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mEAAmE,+CAAM;AACzE,uCAAuC,+CAAM;AAC7C;AACA,iDAAiD,kDAAS;AAC1D;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,uCAAuC,iDAAQ;AAC/C;AACA,iDAAiD,kDAAS;AAC1D;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AChKA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;;AAGb,SAAS;AACT;AACA,C;;;;;;;;;;;;AC1CA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AChBA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,wBAAwB,EAAE,QAAQ,GAAG,wBAAwB,EAAE,QAAQ,GAAG,aAAa;AAC/H;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACpDA;AAAA;AAAA;AAAA;AAA6B;AACd;AACf;AACA,kBAAkB,8CAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,sBAAsB;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAwB;AACE;AACA;AAC1B;AACA;AACA,iBAAiB,6CAAI;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import uuidv4 from \"uuid/v4\";\nexport default class Bullet {\n    constructor(game, car){\n        this.id = uuidv4();\n        this.game = game;\n        this.car = car;\n        this.ctx = game.ctx;\n        this.speed = 100;\n        this.pos = {\n            x: this.car.position.x,\n            y: this.car.position.y + 1\n        };\n        this.image = new Image();\n        this.image.src = \"./images/beams.png\";\n        this.width = 62;\n        this.height = 111;\n    }\n\n    fire(){\n        this.pos.y -= this.speed;\n    }\n\n    updateUi(){\n        this.ctx.drawImage(this.image, 203, 300, this.width, this.height, this.pos.x, this.pos.y, 62, 111);\n        this.fire();\n    }\n}","import Bullet from './Bullet';\nexport default class Car {\n    constructor(game){\n        this.game = game;\n        this.ctx = game.ctx;\n        this.dimensions = {\n            x: 44,\n            y: 88\n        }\n        this.position = {\n            x: 225,\n            y: 450\n        };\n        this.bullets = [];\n        this.speed = 0;\n        this.maxSpeed = 270;\n        this.image = new Image();\n        this.image.src = './images/cars_racer.svg';\n        this.populateBullets();\n        this.ammoDisplay = document.querySelector(\".level\");\n        this.gunSound = new Audio(\"./sounds/gun_sound.wav\");\n    }\n\n    populateBullets(){\n        for (let i = 0; i < 100; i++){\n            this.bullets.push(new Bullet(this.game, this));\n        }\n    }\n\n    shoot(){\n        if (this.bullets.length > 0){\n            let bullet = this.bullets.pop();\n            bullet.pos.x = this.position.x;\n            this.game.bullets.push(bullet);\n        }\n        this.gunSound.play();\n    }\n\n    setSpeed(speed){\n        if (speed >= this.maxSpeed){\n            this.speed = this.maxSpeed;\n        } else if (speed <= 0){\n            this.speed = 0;\n        } else {\n            this.speed = speed;\n        }\n        document.querySelector(\".speed\").innerHTML = this.speed;\n    }\n\n    getSpeed(){\n        return this.speed;\n    }\n\n    moveLeft(){\n        this.position.x -= 20;\n        if (this.position.x <= 150) this.position.x = 150;\n    }\n\n    moveRight(){\n        this.position.x += 20;\n        if (this.position.x >= 435) this.position.x = 435;\n    }\n\n    reset(){\n        this.position = {\n            x: 225,\n            y: 450\n        };\n        this.setSpeed(0);\n    }\n\n    renderAmmo(){\n        this.ammoDisplay.innerHTML = this.bullets.length.toString();\n    }\n\n    \n\n    updateUi(){\n        this.ctx.drawImage(this.image, 0, 0, 221, 442, this.position.x, this.position.y, this.dimensions.x, this.dimensions.y);\n        this.renderAmmo();\n    }\n}","import uuidv4 from \"uuid/v4\";\nexport default class CrazyCar {\n    //403 x 766\n    constructor(game){\n        this.game = game;\n        this.id = uuidv4();\n        this.ctx = game.ctx\n        this.img = new Image();\n        this.img.src = `./images/${Math.floor(Math.random() * 4) + 1}.png`;\n        this.width = 50;\n        this.height = 95;\n        this.possiblePosX = [100, 150, 200, 250, 300, 350, 400];\n        this.pos = {\n            x: this.possiblePosX[Math.floor(Math.random() * 7)],\n            y: 10\n        }\n        this.speed = Math.floor(Math.random() * 11) + 2;\n    }\n\n    removeRandomCrazyCar(){\n        if (this.pos.y >= 640){\n            this.game.onComingCars.splice(this.game.onComingCars.indexOf(this), 1);\n        }\n    }\n\n    updateUi(){\n        this.ctx.drawImage(this.img, 0, 0, 403, 766, this.pos.x, this.pos.y, this.width, this.height);\n        this.pos.y += this.speed + (this.game.car.getSpeed() / 10);\n        this.removeRandomCrazyCar();\n    }\n}","export default class Explosion {\n    constructor(options){\n    this.game = options.game;\n    this.ctx = this.game.ctx;\n    this.sheetWidth = 640\n    this.sheetHeight = 384\n    this.pos = {\n        x: options.xPosition,\n        y: options.yPosition\n    };\n    this.img = new Image();\n    this.img.src = \"./images/fire/fire1_64.png\";\n    this.frameCount = 10;\n    this.width = this.sheetWidth / this.frameCount;\n    this.cols = 6;\n    this.rows = 10\n    this.height = this.sheetHeight / this.rows;\n    this.currentFrame = 0;\n    this.col = 0;\n    }\n\n    setPos(x, y){\n        this.pos = {\n            x, y\n        }\n    }\n\n    getPos(){\n        return this.pos;\n    }\n\n    removeExplosion() {\n        if (this.pos.y >= 640 || this.pos.x < 0) {\n            this.game.explosions.splice(this.game.explosions.indexOf(this), 1)\n        }\n    }\n\n    updateFrame(){\n        if (this.currentFrame === 10){\n            this.col++;\n            if (this.col > 6){\n                this.col = 0;\n            }\n        }\n    this.currentFrame = ++this.currentFrame % this.cols;\n    this.srcX = this.currentFrame * this.width;\n    this.srcY = this.col * this.height;\n    this.pos.y += this.game.car.getSpeed() / 10;\n    }\n\n    updateUi(){\n        this.updateFrame();\n        this.ctx.drawImage(this.img, this.srcX, this.srcY, this.width, this.height, this.pos.x, this.pos.y, this.width, this.height);\n    }\n}\n\n","import Road from './Road';\nimport Car from './Car';\nimport InputHandler from './InputHandler';\nimport CrazyCar from './CrazyCar';\nimport Stats from './Stats';\nimport Zombie from './Zombie';\nimport Bullet from './Bullet';\nimport Explosion from './Explosion';\nexport default class Game {\n    constructor(ctx){\n        this.ctx = ctx;\n        this.paused = false;\n        this.road = new Road(this);\n        this.car = new Car(this);\n        this.stats = new Stats(this);\n        new InputHandler({\n            road: this.road,\n            car: this.car,\n            bullet: this.bullet\n        });\n        this.onComingCars = [];\n        this.zombies = [];\n        this.bullets = [];\n        this.explosions = [];\n        this.createRandomCrazyCars();\n        this.createZombies();\n        this.accelerateRef = document.getElementById(\"accelerate\");\n        this.crashSound = new Audio('./sounds/Car-crash-sound-effect.mp3');\n        this.zombie = new Zombie(this);\n        this.explosionSound = new Audio('./sounds/explosion.wav');\n    }\n\n    createRandomCrazyCars(){\n        if (this.paused) return;\n        setInterval(() => {\n            const crazyCar = new CrazyCar(this);\n            this.onComingCars.push(crazyCar);\n        }, 3000);\n    }\n\n    renderBullets(){\n        this.bullets.forEach(bullet => bullet.updateUi());\n    }\n\n    renderExplosions(){\n        this.explosions.forEach(explosion => explosion.updateUi());\n    }\n\n    createZombies(){\n        if (this.paused) return;\n        setInterval(() => {\n            const zombie = new Zombie(this);\n            this.zombies.push(zombie)\n        }, 5000)\n    }\n\n    updateZombies(){\n        this.zombies.forEach(zombie => zombie.updateUi());\n    }\n\n    updateOncomingCars(){\n        this.onComingCars.forEach(onComingCar => onComingCar.updateUi());\n    }\n\n    checkCollision(){\n        this.onComingCars.forEach(onComingCar => {\n            if (((onComingCar.pos.y + onComingCar.height) >= this.car.position.y && onComingCar.pos.y <= (this.car.position.y + this.car.dimensions.y)) && (Math.abs(onComingCar.pos.x - this.car.position.x) <= this.car.dimensions.x)){\n                console.log(\"Collision\");\n                this.paused = true;\n                const crashDiv = document.querySelector(\".crash\");\n                crashDiv.classList.add(\"show\");\n                this.accelerateRef.pause();\n                this.crashSound.play();\n                document.addEventListener(\"keydown\", e => {\n                    this.reset(e);\n                })\n            }\n        })\n\n        this.zombies.forEach(zombie => {\n            if (((zombie.pos.y) >= this.car.position.y && zombie.pos.y <= (this.car.position.y + this.car.dimensions.y)) && (Math.abs(zombie.pos.x - this.car.position.x) <= this.car.dimensions.x)) {\n                console.log(\"Collision\");\n                this.paused = true;\n                const crashDiv = document.querySelector(\".crash\");\n                crashDiv.classList.add(\"show\");\n                this.accelerateRef.pause();\n                this.crashSound.play();\n                document.addEventListener(\"keydown\", e => {\n                    this.reset(e);\n                })\n            }\n        })\n\n        const mergedObjects = this.zombies.concat(this.onComingCars);\n        mergedObjects.forEach(obj => {\n            this.bullets.forEach(bullet => {\n                if (((obj.pos.y + obj.height) >= bullet.pos.y && obj.pos.y <= (bullet.pos.y + bullet.height)) && (Math.abs(obj.pos.x - bullet.pos.x) <= bullet.width + 50)){\n                    console.log(\"This is the type\", obj instanceof Zombie);\n                    if (obj instanceof Zombie){\n                        this.zombies.splice(this.zombies.findIndex(zombie => zombie.id === obj.id));\n                        this.explosions.push(new Explosion({\n                            game: this,\n                            xPosition: obj.pos.x,\n                            yPosition: obj.pos.y\n                        }));\n                        this.explosionSound.play();\n                    }\n                    if (obj instanceof CrazyCar) {\n                        this.onComingCars.splice(this.onComingCars.findIndex(crazyCar => crazyCar.id === obj.id));\n                        this.explosions.push(new Explosion({\n                            game: this,\n                            xPosition: obj.pos.x,\n                            yPosition: obj.pos.y\n                        }));\n                        this.explosionSound.play();\n                    }\n                }\n            });\n        });\n\n    }\n\n    winGame(){\n        this.paused = true;\n    }\n\n    reset(e){\n        if (e.keyCode !== 32) return;\n        this.onComingCars = [];\n        this.zombies = [];\n        this.car.reset();\n        this.paused = false;\n        const crashDiv = document.querySelector(\".crash\");\n        crashDiv.classList.contains(\"show\") && crashDiv.classList.remove(\"show\");\n        const winDiv = document.querySelector(\".win\");\n        winDiv.classList.contains(\"show\") && winDiv.classList.remove(\"show\");\n        this.stats.reset();\n        this.accelerateRef.pause();\n    }\n\n    playAcceleration() {\n        if (this.car.getSpeed() > !this.accelerateRef.paused) {\n            this.accelerateRef.play();\n        } else if (this.car.getSpeed() === 0) {\n            this.accelerateRef.pause();\n        }\n    }\n\n    updateUi(timestamp){\n        if (this.paused) return;\n        this.road.updateUi();\n        this.car.updateUi();\n        this.updateOncomingCars();\n        this.playAcceleration();\n       this.checkCollision();\n       this.stats.updateUi(timestamp);\n       this.updateZombies();\n       this.renderBullets();\n       this.renderExplosions();\n    }\n}","export default class InputHandler {\n    constructor(options){\n        this.road = options.road;\n        this.car = options.car;\n        this.receiveInput();\n        this.brakeAudio = document.getElementById(\"brake\");\n        this.bullet = options.bullet;\n    }\n\n    receiveInput(){\n        document.addEventListener('keydown', e => {\n            switch(e.keyCode){\n                case 38:  //up\n                this.car.setSpeed(this.car.getSpeed() + 2);\n                break;\n                case 40: //down\n                    this.car.setSpeed(this.car.getSpeed() - 5);\n                    this.brakeAudio.play();\n                break;\n                case 37: //left\n                this.car.moveLeft();\n                break;\n                case 39: //right\n                this.car.moveRight();\n                break;\n                case 32:\n                case 13:\n                    this.car.shoot();\n                    break;\n            }\n\n            document.addEventListener(\"keyup\", e => {\n                switch(e.keyCode){\n                    case 40: \n                    this.brakeAudio.pause();\n                    break;\n                }\n            })\n                \n            \n        })\n    }\n}","export default class Road {\n    constructor(game){\n        this.game = game;\n        this.ctx = this.game.ctx;\n        this.verticalOffset = -640;\n        this.image = new Image();\n        this.image.src = \"./images/background-1.png\";\n    }\n\n    updateUi(){\n        if (this.verticalOffset >= 0) this.verticalOffset = -640;\n        this.ctx.drawImage(this.image, 0, this.verticalOffset);\n        this.ctx.drawImage(this.image, 0, this.verticalOffset + 640);\n        this.ctx.drawImage(this.image, 0, this.verticalOffset + 1280);\n        this.verticalOffset += (this.game.car.getSpeed() / 10);\n    }\n}","export default class Stats {\n    constructor(game){\n        this.game = game;\n        this.timeDisplay = document.querySelector(\".time-num\");\n        this.startTime = Date.now();\n        this.lastTime = Date.now();\n        this.totalDistance = 7;\n        this.distanceDriven = 0;\n        this.milesLeftDisplay = document.querySelector(\".miles\");\n    }\n\n    setTimeElapsed(){\n        const timeElapsed = Date.now() - this.startTime;\n        const time = new Date(timeElapsed);\n        const minutes = time.getMinutes();\n        const seconds = time.getSeconds();\n        const milliseconds = Math.floor(time.getMilliseconds() / 10);\n        this.timeDisplay.innerHTML = `${minutes < 10 ? \"0\" : \"\"}${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}:${milliseconds}`;\n    }\n\n    setMiLeft(timestamp){\n        let currentTime = Date.now();\n        let deltaTime = currentTime - this.lastTime;\n        \n        const test = new Date(timestamp).getSeconds();\n        if (deltaTime >= 1000){\n            this.lastTime = currentTime;\n            let velocityPerSecond = this.game.car.getSpeed() / 36000;\n            this.distanceDriven += velocityPerSecond;\n            this.milesLeftDisplay.innerHTML = (this.totalDistance - this.distanceDriven).toFixed(2);\n        }\n    }\n\n    gameWon(){\n        if (this.distanceDriven == this.totalDistance){\n            const winDiv = document.querySelector(\".win\");\n            this.game.paused = true;\n            winDiv.classList.add(\"show\");\n            document.addEventListener(\"keydown\", e => {\n                this.game.reset(e);\n            })\n        }\n    }\n\n    reset(){\n        this.startTime = Date.now();\n    }\n\n    updateUi(timestamp){\n        this.setTimeElapsed(timestamp);\n        this.setMiLeft(timestamp);\n    }\n}","import uuidv4 from \"uuid/v4\";\nexport default class Zombie {\n    constructor(game){\n        this.id = uuidv4();\n        this.game = game;\n        this.ctx = this.game.ctx;\n        this.pos = {\n            x: 400,\n            y: 100\n        };\n        this.speed = 5;\n        this.img = new Image();\n        this.width = 200;\n        this.height = 312;\n        this.frame = 1;\n    }\n\n    animateWalk(){\n        if (this.frame > 10) this.frame = 1;\n        this.img.src = `./images/walk/go_${this.frame.toString()}.png`;\n        this.pos.x -= 1 / 2;\n        this.pos.y += this.game.car.getSpeed() / 10;\n        this.frame++;\n    }\n\n    removeZombie(){\n        if (this.pos.y >= 640 || this.pos.x < 0){\n            this.game.zombies.splice(this.game.zombies.indexOf(this), 1)\n        }\n    }\n\n    updateUi(){\n        this.ctx.drawImage(this.img, 0, 0, this.width, this.height, this.pos.x, this.pos.y, 50, 78);\n        this.animateWalk();\n    }\n}","import Car from './Car';\nimport Game from './Game';\nimport Road from './Road';\nconst canvas = document.getElementById(\"race-game\");\nconst context = canvas.getContext(\"2d\");\nconst game = new Game(context);\n\n// const road = new Image();\n// let verticalOffset = -640;\n// road.src = \"./images/background-1.png\";\n// const carImage = new Image();\n// carImage.src = \"./images/cars_racer.svg\";\n// const car = new Car(game);\n// const road = new Road(game);\n\nrequestAnimationFrame(gameLoop);\n\nfunction gameLoop(timestamp){\n    game.updateUi(timestamp);\n    requestAnimationFrame(gameLoop);\n}"],"sourceRoot":""}